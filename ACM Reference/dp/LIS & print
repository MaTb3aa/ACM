//============================================================================
// Name        : ICPC.cpp
// Author      : MaTb3aa
// Quotes      : Nothing is impossible, the word itself says 'I'm possible'!.
// Copyright   : Audrey Hepburn
// Description : You Can Do It
//============================================================================
#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")
#define endl                         '\n'	
#define Ceil(x,y)             ((x+y-1)/y)
#define sz(s)               (int)s.size()
#define RT(x)           return cout<<x,0;
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define vi                    vector<int>
#define pii                 pair<int,int>
#define forr(i, n) for (int i = 0; i < int(n); i++)
int dx[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
int dy[] = { 1, -1, 0, 0, -1, 1, 1, -1 };

const double pi = acos(-1), eps = 1e-9;
const int OO = 0x3f3f3f3f, N = 1e6 + 5, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x%y); }
ll lcm(ll x, ll y) { return ((x / gcd(x, y))*y); }

void file() {
/*#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif  !ONLINEJUDGE*/
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
}


vector<int>v;
int dp[1000][1000];
int solve(int idx,int lst){
    if(idx==sz(v))return 0;
    int ret=0;
    if(dp[idx][lst]!=-1)return dp[idx][lst];
    
    ret=solve(idx+1,lst);
    if(v[idx]>v[lst])ret=max(ret,solve(idx+1,idx)+1);
    return dp[idx][lst]=ret;

}

void print(int idx,int lst){
    if(idx==sz(v))return;
    int ret=solve(idx,lst);
    if(ret==solve(idx+1,idx)+1){
        cout<<v[idx]<<endl;
        print(idx+1,idx);
        return;
    }
    print(idx+1,lst);
}
int main() {
	file();
    int t,x;
    cin>>t;
    string s;cin>>s;
    cin.ignore();
    while(t--){
        v.clear();
        mem(dp,-1);
        if(s!=""){
        
          stringstream ss(s);
            ss >> x;
            v.push_back(x);
        }
         while (getline(cin, s) && s!=""){ 
            stringstream ss(s);
            ss >> x;
            v.push_back(x);
        }
        v.push_back(-1);
        cout<<"Max hits: "<<solve(0,sz(v)-1)<<endl;
        print(0,sz(v)-1);cout<<endl;
    }
		
	return 0;
}
